const chatEl = document.getElementById("chat");
const inputEl = document.getElementById("user-input");
const sendBtn = document.getElementById("send-btn");
const sidebar = document.getElementById("sidebar");
const menuToggle = document.querySelector(".menu-toggle");
const themeToggle = document.getElementById("themeToggle");

let messages = [{
  role: "system",
  content: "B·∫°n l√† üêõ S√¢uGPT, m·ªôt tr·ª£ l√Ω AI chuy√™n vi·∫øt code. B·∫°n t·ªët nghi·ªáp chuy√™n ng√†nh code (ƒë·∫∑c bi·ªát l√† Lua Roblox). Lu√¥n ƒë∆∞a code v√†o block c√≥ n√∫t sao ch√©p v√† gi·∫£i th√≠ch ng·∫Øn g·ªçn."
}];

let botName = localStorage.getItem("saugpt_botname") || "üêõ S√¢uGPT";
let userAlias = localStorage.getItem("saugpt_useralias") || "b·∫°n";

function addMessage(text, sender = "bot") {
  const msg = document.createElement("div");
  msg.className = "message " + sender;

  if (text.includes("```")) {
    let parts = text.split(/```/);
    parts.forEach((part, i) => {
      if (i % 2 === 0) {
        if (part.trim()) msg.innerHTML += part.trim() + "<br>";
      } else {
        const codeBlock = document.createElement("div");
        codeBlock.className = "code-block";
        codeBlock.textContent = part.trim();
        const copyBtn = document.createElement("button");
        copyBtn.className = "copy-btn";
        copyBtn.textContent = "üìã";
        copyBtn.onclick = () => {
          navigator.clipboard.writeText(codeBlock.textContent);
          copyBtn.textContent = "‚úÖ";
          setTimeout(() => copyBtn.textContent = "üìã", 1500);
        };
        codeBlock.appendChild(copyBtn);
        msg.appendChild(codeBlock);
      }
    });
  } else {
    msg.innerText = text;
  }

  chatEl.appendChild(msg);
  chatEl.scrollTop = chatEl.scrollHeight;
}

async function sendMessage() {
  const text = inputEl.value.trim();
  if (!text) return;

  addMessage(text, "user");
  inputEl.value = "";

  messages.push({ role: "user", content: text });

  try {
    const res = await fetch("/chat", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ messages })
    });
    const data = await res.json();
    const reply = data.reply || "‚ùå L·ªói server!";
    addMessage(reply, "bot");
    messages.push({ role: "assistant", content: reply });
  } catch {
    addMessage("‚ö†Ô∏è API Key sai ho·∫∑c server l·ªói.", "bot");
  }
}

sendBtn.onclick = sendMessage;
inputEl.addEventListener("keypress", e => {
  if (e.key === "Enter") sendMessage();
});

menuToggle.onclick = () => sidebar.classList.toggle("active");
themeToggle.onclick = () => {
  document.body.classList.toggle("dark");
  themeToggle.textContent = document.body.classList.contains("dark") ? "‚òÄÔ∏è" : "üåô";
};

document.getElementById("newChat").onclick = () => {
  chatEl.innerHTML = "";
  messages = [messages[0]];
  addMessage(`Xin ch√†o! T√¥i l√† ${botName}. Nay ch√∫ng ta s·∫Ω l√†m script g√¨ ƒë√¢y, ${userAlias}?`);
};

document.getElementById("setAlias").onclick = () => {
  const bot = prompt("ƒê·∫∑t t√™n cho S√¢uGPT:", botName);
  const alias = prompt("Ch√∫ng t√¥i n√™n g·ªçi b·∫°n nh∆∞ n√†o?", userAlias);
  if (bot) { botName = bot; localStorage.setItem("saugpt_botname", bot); }
  if (alias) { userAlias = alias; localStorage.setItem("saugpt_useralias", alias); }
  addMessage(`Xin ch√†o! T√¥i l√† ${botName}. Nay ch√∫ng ta s·∫Ω l√†m script g√¨ ƒë√¢y, ${userAlias}?`);
};

(function init() {
  addMessage(`Xin ch√†o! T√¥i l√† ${botName}. Nay ch√∫ng ta s·∫Ω l√†m script g√¨ ƒë√¢y, ${userAlias}?`);
})();
